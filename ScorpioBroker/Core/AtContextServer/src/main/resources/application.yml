mysettings:
  application-name: atcontext-server
  kafka:
    bootstrap:
      host: ${bushost:localhost}
      port: ${busport:9092}
bootstrap:
  servers: ${mysettings.kafka.bootstrap.host}:${mysettings.kafka.bootstrap.port}
spring:
#  mvc.pathpattern.matching-strategy: ant_path_matcher
  application.name: ${mysettings.application-name}
  main:
    lazy-initialization: true
    allow-bean-definition-overriding: true
  kafka:
    producer:
      bootstrap-servers: ${bootstrap.servers}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      bootstrap-servers: ${bootstrap.servers}
      group-id: ${mysettings.application-name}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    admin:
      properties:
        cleanup:
          policy: compact  

server:
  port: 27015
  tomcat:
    max:
      threads: 20
#Entity-Manager properties
entity:
  topic: ENTITY
query:
  topic: QUERY
  result:
    topic: QUERY_RESULT
csource:
  query:
    topic: CONTEXT_REGISTRY_QUERY
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    restart:
      enabled: true



               
          